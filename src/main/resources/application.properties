spring.application.name=Library Management Sysem 

## Database configuration
spring.datasource.url=jdbc:mysql://localhost:3307/library_management_system
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update

# Prevent Hibernate from applying schema changes automatically
spring.jpa.hibernate.ddl-auto=update
##Hibrnate doesnot support writing schema somethimes working with create and drop only so for this using javax
# Enable generation of DDL scripts for both updates and creation without applying them
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=update

# Generate the DDL to a file
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/db/schema/ddl.sql

# Log SQL queries to the console (optional)
spring.jpa.show-sql=true

#Enable debug level logging
logging.level.org.hibernate.SQL=DEBUG

#Enable debug level logging sepically for jpa 
logging.level.org.springframework.data.jpa.repository.query=DEBUG

#Log SQL parameters(Values passed to query)
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#Format Sql output
spring.jpa.properties.hibernate.format_sql=true

## Hibrnate propreties
## This dialect tells Hibernate how to generate SQL optimized for MySQL version 8 and above
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

## Swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs



